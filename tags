!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jack/.SpaceVim.d/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
#	autoload/myspacevim.vim	/^    xnoremap # :<C-u>call <SID>VsetSearch()<CR>?<C-R>=@\/<CR><CR>$/;"	m
*	autoload/myspacevim.vim	/^    xnoremap * :<C-u>call <SID>VsetSearch()<CR>\/<C-R>=@\/<CR><CR>$/;"	m
*	init.vim	/^	nnoremap <silent><buffer><expr> * defx#do_action('toggle_select_all')$/;"	m
,	autoload/myspacevim.vim	/^    nmap , <Plug>(coc-smartf-repeat-opposite)$/;"	m
-	init.vim	/^nnoremap - Nzz$/;"	m
.	init.vim	/^  nnoremap <silent><buffer><expr> .     defx#do_action('toggle_ignored_files')     " 显示隐藏/;"	m
2u	init.vim	/^	nnoremap <silent><buffer><expr> 2u  defx#do_action('cd', ['..\/..'])$/;"	m
3u	init.vim	/^	nnoremap <silent><buffer><expr> 3u  defx#do_action('cd', ['..\/..\/..'])$/;"	m
4u	init.vim	/^	nnoremap <silent><buffer><expr> 4u  defx#do_action('cd', ['..\/..\/..\/..'])$/;"	m
;	autoload/myspacevim.vim	/^    nmap ; <Plug>(coc-smartf-repeat)$/;"	m
;	init.vim	/^	nnoremap <silent><buffer><expr> ;   defx#do_action('repeat')$/;"	m
;a	init.vim	/^nnoremap  ;a :bp<CR>$/;"	m
;e	init.vim	/^nnoremap  ;e :bn<CR>$/;"	m
;n	init.vim	/^noremap <silent>;n :tabnext<cr>$/;"	m
;p	init.vim	/^noremap <silent>;p :tabprevious<cr>$/;"	m
;r	init.vim	/^noremap ;r :set splitright<CR>:vsplit<CR>:res +10<CR>:term<CR>$/;"	m
;se	init.vim	/^nnoremap ;se  :%s\/\\s\\+$\/\/g<CR>$/;"	m
;sh	init.vim	/^nnoremap ;sh  :%s\/^\\s*\/\/g<CR>$/;"	m
;ss	init.vim	/^nnoremap ;ss   :g\/^$\/d<CR>$/;"	m
;t	init.vim	/^noremap ;t :set splitbelow<CR>:split<CR>:res +10<CR>:term<CR>$/;"	m
;w	init.vim	/^nmap ;w :w<CR>$/;"	m
;wq	init.vim	/^nmap ;wq :wq<CR>$/;"	m
;x	init.vim	/^map ;x :r !figlet$/;"	m
<	init.vim	/^    nnoremap <silent><buffer><expr> <        defx#do_action('resize',  defx#get_context().winwid/;"	m
<	init.vim	/^nnoremap < <<$/;"	m
<	init.vim	/^xnoremap < <gv$/;"	m
<C-,>	init.vim	/^nmap <C-,> :Buffers<CR>$/;"	m
<C-.>	init.vim	/^map <C-.> :call AdjustFontSize(-1) <CR>$/;"	m
<C-;>	init.vim	/^map <C-;> :call AdjustFontSize(1) <CR>$/;"	m
<C-Home>	init.vim	/^map <C-Home> :call AdjustFontSize(10) <CR>$/;"	m
<C-M-down>	init.vim	/^inoremap <C-M-down> <Esc><C-e>a$/;"	m
<C-M-down>	init.vim	/^nmap <C-M-down>  <C-e>$/;"	m
<C-M-down>	init.vim	/^vmap <C-M-down>  <C-e>$/;"	m
<C-M-left>	init.vim	/^inoremap <C-M-left> <Esc>5<C-y>a$/;"	m
<C-M-left>	init.vim	/^noremap <C-M-left> 5<C-y>$/;"	m
<C-M-right>	init.vim	/^inoremap <C-M-right> <Esc>5<C-e>a$/;"	m
<C-M-right>	init.vim	/^noremap <C-M-right> 5<C-e>$/;"	m
<C-M-up>	init.vim	/^inoremap <C-M-up> <Esc><C-y>a$/;"	m
<C-M-up>	init.vim	/^nmap <C-M-up>  <C-y>$/;"	m
<C-M-up>	init.vim	/^vmap <C-M-up>  <C-y>$/;"	m
<C-S-o>	init.vim	/^nnoremap <C-S-o> <C-W>o$/;"	m
<C-ScrollWheelDown>	init.vim	/^inoremap <C-ScrollWheelDown> <Esc>:call AdjustFontSize(-1)<CR>a$/;"	m
<C-ScrollWheelDown>	init.vim	/^map <silent> <C-ScrollWheelDown> :call AdjustFontSize('-')<CR>$/;"	m
<C-ScrollWheelDown>	init.vim	/^noremap <C-ScrollWheelDown> :call AdjustFontSize(-1)<CR>$/;"	m
<C-ScrollWheelUp>	init.vim	/^inoremap <C-ScrollWheelUp> <Esc>:call AdjustFontSize(1)<CR>a$/;"	m
<C-ScrollWheelUp>	init.vim	/^map <silent> <C-ScrollWheelUp> :call AdjustFontSize('+')<CR>$/;"	m
<C-ScrollWheelUp>	init.vim	/^noremap <C-ScrollWheelUp> :call AdjustFontSize(1)<CR>$/;"	m
<C-a>	init.vim	/^cnoremap <C-a> <Home>$/;"	m
<C-a>	init.vim	/^inoremap <C-a> <ESC>A$/;"	m
<C-a>	init.vim	/^inoremap <C-a> <Esc>ggvG\$$/;"	m
<C-a>	init.vim	/^noremap <C-a> ggvG\$$/;"	m
<C-c>	init.vim	/^nnoremap <C-c> "+y$/;"	m
<C-c>	init.vim	/^vnoremap <C-c> "+y<Esc>$/;"	m
<C-d>	autoload/myspacevim.vim	/^    inoremap <C-d> <Delete>$/;"	m
<C-e>	init.vim	/^cnoremap <C-e> <End>$/;"	m
<C-e>	init.vim	/^inoremap <C-e> <ESC>I$/;"	m
<C-f>	autoload/myspacevim.vim	/^    inoremap <C-f> <C-x><C-k>$/;"	m
<C-g>	init.vim	/^	nnoremap <silent><buffer><expr> <C-g> defx#do_action('print')$/;"	m
<C-h>	autoload/myspacevim.vim	/^    inoremap <C-h> <Left>$/;"	m
<C-h>	autoload/myspacevim.vim	/^    noremap <C-h> <C-w>h$/;"	m
<C-h>	init.vim	/^	nnoremap <silent><buffer><expr> <C-h>     defx#do_action('toggle_ignored_files')     " 显示隐/;"	m
<C-h>	init.vim	/^	nnoremap <silent><buffer><expr> <C-h> defx#do_action('toggle_ignored_files')$/;"	m
<C-h>	init.vim	/^cnoremap <C-h> <Left>$/;"	m
<C-h>	init.vim	/^nnoremap <C-h> <C-W>h$/;"	m
<C-j>	autoload/myspacevim.vim	/^    inoremap <C-j> <Down>$/;"	m
<C-j>	autoload/myspacevim.vim	/^    noremap <C-j> <C-w>j$/;"	m
<C-j>	init.vim	/^cnoremap <C-j> <Down>$/;"	m
<C-j>	init.vim	/^nnoremap <C-j> <C-W>j$/;"	m
<C-k>	autoload/myspacevim.vim	/^    inoremap <C-k> <Up>$/;"	m
<C-k>	autoload/myspacevim.vim	/^    noremap <C-k> <C-w>k$/;"	m
<C-k>	init.vim	/^cnoremap <C-k> <Up>$/;"	m
<C-k>	init.vim	/^nnoremap <C-k> <C-W>k$/;"	m
<C-kMinus>	init.vim	/^inoremap <C-kMinus> <Esc>:call AdjustFontSize(-1)<CR>a$/;"	m
<C-kPlus>	init.vim	/^inoremap <C-kPlus> <Esc>:call AdjustFontSize(1)<CR>a$/;"	m
<C-l>	autoload/myspacevim.vim	/^    inoremap <C-l> <Right>$/;"	m
<C-l>	autoload/myspacevim.vim	/^    noremap <C-l> <C-w>l$/;"	m
<C-l>	init.vim	/^cnoremap <C-l> <Right>$/;"	m
<C-l>	init.vim	/^nnoremap <C-l> <C-W>l$/;"	m
<C-p>	init.vim	/^nnoremap <C-p> "*p  # 支持在normal模式下，通过C-p粘贴系统剪切板$/;"	m
<C-q>	init.vim	/^nnoremap <C-q> <C-W>q$/;"	m
<C-r>	init.vim	/^  nnoremap <silent><buffer><expr> <C-r>  defx#do_action('redraw')$/;"	m
<C-s>	init.vim	/^inoremap <C-s> <Esc>"+pa$/;"	m
<C-s>	init.vim	/^nnoremap <C-s> "+gp$/;"	m
<C-s>	init.vim	/^nnoremap <C-s> "+p$/;"	m
<C-t>	init.vim	/^nnoremap <C-t> <C-W>T$/;"	m
<C-w>	init.vim	/^nnoremap <C-w> <C-W>w$/;"	m
<C-x>	init.vim	/^inoremap <C-x> <Esc>"+x$/;"	m
<C-x>	init.vim	/^map <C-x> "+x$/;"	m
<CR>	init.vim	/^	nnoremap <silent><buffer><expr> <CR>     <SID>defx_toggle_tree()                    " 打开或/;"	m
<F11>	init.vim	/^cnoremap <silent> <F11> <Esc>:call AdjustFontSize('-')<CR>$/;"	m
<F11>	init.vim	/^inoremap <silent> <F11> <Esc>:call AdjustFontSize('-')<CR>$/;"	m
<F11>	init.vim	/^nnoremap <silent> <F11> :call AdjustFontSize('-')<CR>$/;"	m
<F11>	init.vim	/^onoremap <silent> <F11> <Esc>:call AdjustFontSize('-')<CR>$/;"	m
<F11>	init.vim	/^vnoremap <silent> <F11> <Esc>:call AdjustFontSize('-')<CR>$/;"	m
<F12>	autoload/myspacevim.vim	/^    noremap <silent><F12> :call quickmenu#toggle(0)<cr>  " <F12> 键打开$/;"	m
<F12>	init.vim	/^cnoremap <silent> <F12> <Esc>:call AdjustFontSize('+')<CR>$/;"	m
<F12>	init.vim	/^inoremap <silent> <F12> <Esc>:call AdjustFontSize('+')<CR>$/;"	m
<F12>	init.vim	/^nnoremap <silent> <F12> :call AdjustFontSize('+')<CR>$/;"	m
<F12>	init.vim	/^onoremap <silent> <F12> <Esc>:call AdjustFontSize('+')<CR>$/;"	m
<F12>	init.vim	/^vnoremap <silent> <F12> <Esc>:call AdjustFontSize('+')<CR>$/;"	m
<F3>	init.vim	/^nnoremap <F3> :call HideNumber()<CR>$/;"	m
<F4>	autoload/myspacevim.vim	/^    nnoremap  <F4>  :call QuickRun()<CR>$/;"	m
<F7>	init.vim	/^map <F7> :call Rungdb()<CR>$/;"	m
<LEADER><CR>	init.vim	/^map <LEADER><CR> :nohlsearch<CR>$/;"	m
<LEADER>df	init.vim	/^noremap <LEADER>df :Defx  -search=`expand('%:p')` -toggle <cr>$/;"	m
<LEADER>df	init.vim	/^noremap <LEADER>df :Defx<CR>$/;"	m
<LEADER>q	init.vim	/^noremap <LEADER>q <C-w>j:q<CR>$/;"	m
<LEADER>sc	init.vim	/^noremap <LEADER>sc :set spell!<CR>$/;"	m
<LEADER>st	init.vim	/^nnoremap <LEADER>st :%s\/    \/\\t\/g$/;"	m
<LEADER>st	init.vim	/^vnoremap <LEADER>st :s\/    \/\\t\/g$/;"	m
<LEADER>v	init.vim	/^noremap <LEADER>v :Vista<CR>$/;"	m
<Leader><Leader>j	init.vim	/^map <Leader><Leader>j <Plug>(easymotion-j)$/;"	m
<Leader><Leader>k	init.vim	/^map <Leader><Leader>k <Plug>(easymotion-k)$/;"	m
<Leader><S-Tab>	init.vim	/^noremap <Leader><S-Tab> :Bw!<CR>$/;"	m
<Leader><Tab>	init.vim	/^noremap <Leader><Tab> :Bw<CR>$/;"	m
<Leader><leader>.	init.vim	/^map <Leader><leader>. <Plug>(easymotion-repeat)$/;"	m
<Leader><leader>h	init.vim	/^map <Leader><leader>h <Plug>()$/;"	m
<Leader><leader>l	init.vim	/^map <Leader><leader>l <Plug>(easymotion-lineforward)$/;"	m
<Leader>A	init.vim	/^nnoremap <silent> <Leader>A :Ag<CR>$/;"	m
<Leader>e	init.vim	/^    map <Leader>e :tabe ~\/.config\/nvim\/init.vim<CR>    "新标签页打开"$/;"	m
<Leader>e	init.vim	/^    map <Leader>e :tabe ~\/.vimrc<CR>$/;"	m
<Leader>fb	init.vim	/^nnoremap <silent> <Leader>fb :Buffers<CR>$/;"	m
<Leader>ff	init.vim	/^nnoremap <silent> <Leader>ff :Files<CR>$/;"	m
<Leader>fh	init.vim	/^nnoremap <silent> <Leader>fh :History<CR>$/;"	m
<Leader>fl	init.vim	/^nnoremap <silent> <Leader>fl :Lines<CR>$/;"	m
<Leader>lb	init.vim	/^nnoremap <silent> <Leader>lb :Leaderf buffer<CR>$/;"	m
<Leader>lb	init.vim	/^nnoremap <silent> <Leader>lb :LeaderfBuffer<CR>$/;"	m
<Leader>lc	init.vim	/^nnoremap <silent> <Leader>lc :Leaderf colorscheme<CR>$/;"	m
<Leader>lf	init.vim	/^nnoremap <silent> <Leader>lf :Leaderf file<CR>$/;"	m
<Leader>lf	init.vim	/^nnoremap <silent> <Leader>lf :LeaderfFile<CR>$/;"	m
<Leader>lh	init.vim	/^nnoremap <silent> <Leader>lh :Leaderf mru<CR>$/;"	m
<Leader>lh	init.vim	/^nnoremap <silent> <Leader>lh :LeaderfMru<CR>$/;"	m
<Leader>lr	init.vim	/^nnoremap <silent> <Leader>lr Leaderf --recall<CR>$/;"	m
<Leader>lw	init.vim	/^nnoremap <silent> <Leader>lw :Leaderf line<CR>$/;"	m
<Leader>rg	init.vim	/^nnoremap <silent> <Leader>rg :Leaderf rg<CR>$/;"	m
<Leader>s	init.vim	/^    map <Leader>s :source  ~\/.config\/nvim\/init.vim<cr>$/;"	m
<Leader>s	init.vim	/^    map <Leader>s :source  ~\/.vimrc<cr>$/;"	m
<Leader>w	autoload/myspacevim.vim	/^    nnoremap <Leader>w  :w<CR>$/;"	m
<Leader>w	init.vim	/^nmap <Leader>w :w<CR>$/;"	m
<M-a>	autoload/myspacevim.vim	/^    noremap <M-a> <Esc>ggVG<CR>$/;"	m
<M-a>	init.vim	/^cnoremap <M-a> <S-Left>$/;"	m
<M-down>	init.vim	/^nnoremap <M-down>  :resize +2<cr>$/;"	m
<M-e>	init.vim	/^cnoremap <M-e> <S-Right>$/;"	m
<M-left>	init.vim	/^nnoremap <M-left>  :vertical resize -2<cr>$/;"	m
<M-r>	init.vim	/^noremap <M-r> :call CompileRunGcc_girl()<CR>$/;"	m
<M-right>	init.vim	/^nnoremap <M-right> :vertical resize +2<cr>$/;"	m
<M-up>	init.vim	/^nnoremap <M-up>    :resize -2<cr>$/;"	m
<S-F11>	init.vim	/^cnoremap <silent> <S-F11> <Esc>:call AdjustFontSize(10)<CR>$/;"	m
<S-F11>	init.vim	/^inoremap <silent> <S-F11> <Esc>:call AdjustFontSize(10)<CR>$/;"	m
<S-F11>	init.vim	/^nnoremap <silent> <S-F11> :call AdjustFontSize(10)<CR>$/;"	m
<S-F11>	init.vim	/^onoremap <silent> <S-F11> <Esc>:call AdjustFontSize(10)<CR>$/;"	m
<S-F11>	init.vim	/^vnoremap <silent> <S-F11> <Esc>:call AdjustFontSize(10)<CR>$/;"	m
<S-F12>	init.vim	/^cnoremap <silent> <S-F12> <Esc>:call DisplayFontSelector()<CR>$/;"	m
<S-F12>	init.vim	/^inoremap <silent> <S-F12> <Esc>:call DisplayFontSelector()<CR>$/;"	m
<S-F12>	init.vim	/^nnoremap <silent> <S-F12> :call DisplayFontSelector()<CR>$/;"	m
<S-F12>	init.vim	/^onoremap <silent> <S-F12> <Esc>:call DisplayFontSelector()<CR>$/;"	m
<S-F12>	init.vim	/^vnoremap <silent> <S-F12> <Esc>:call DisplayFontSelector()<CR>$/;"	m
<S-M-h>	init.vim	/^nnoremap <S-M-h> <C-w>H$/;"	m
<S-M-j>	init.vim	/^nnoremap <S-M-j> <C-w>J$/;"	m
<S-M-k>	init.vim	/^nnoremap <S-M-k> <C-w>K$/;"	m
<S-M-l>	init.vim	/^nnoremap <S-M-l> <C-w>L$/;"	m
<S-Tab>	init.vim	/^noremap <S-Tab> :bp<CR>$/;"	m
<S-down>	init.vim	/^nmap <S-down>  <C-d>$/;"	m
<S-down>	init.vim	/^vmap <S-down>  <C-d>$/;"	m
<S-left>	init.vim	/^nmap <S-left>  <C-b>$/;"	m
<S-left>	init.vim	/^vmap <S-left>  <C-b>$/;"	m
<S-right>	init.vim	/^nmap <S-right>  <C-f>$/;"	m
<S-right>	init.vim	/^vmap <S-right>  <C-f>$/;"	m
<S-tab>	init.vim	/^noremap <silent><S-tab> :tabnext<CR>$/;"	m
<S-up>	init.vim	/^nmap <S-up>  <C-u>$/;"	m
<S-up>	init.vim	/^vmap <S-up>  <C-u>$/;"	m
<SPACE><SPACE>	init.vim	/^noremap <SPACE><SPACE> <Esc>\/<++><CR>:nohlsearch<CR>c4l$/;"	m
<Space>	init.vim	/^	nnoremap <silent><buffer><expr> <Space> defx#do_action('toggle_select') . 'j'$/;"	m
<Tab>	init.vim	/^noremap <Tab> :bn<CR>$/;"	m
<kMinus>	init.vim	/^noremap <kMinus> :call AdjustFontSize(-1)<CR>$/;"	m
<kPlus>	init.vim	/^noremap <kPlus> :call AdjustFontSize(1)<CR>$/;"	m
<leader>0	init.vim	/^noremap <leader>0 :tablast<CR>$/;"	m
<leader>1	init.vim	/^noremap <leader>1 1gt$/;"	m
<leader>2	init.vim	/^noremap <leader>2 2gt$/;"	m
<leader>3	init.vim	/^noremap <leader>3 3gt$/;"	m
<leader>4	init.vim	/^noremap <leader>4 4gt$/;"	m
<leader>5	init.vim	/^noremap <leader>5 5gt$/;"	m
<leader>6	init.vim	/^noremap <leader>6 6gt$/;"	m
<leader>7	init.vim	/^noremap <leader>7 7gt$/;"	m
<leader>8	init.vim	/^noremap <leader>8 8gt$/;"	m
<leader>9	init.vim	/^noremap <leader>9 9gt$/;"	m
<leader>e	init.vim	/^map <leader>e :e! ~\/.config\/nvim\/init.vim<CR>$/;"	m
<leader>l	init.vim	/^nnoremap <leader>l :nohlsearch<cr>:diffupdate<cr>:syntax sync fromstart<cr><c-l>$/;"	m
<leader>sa	init.vim	/^map <leader>sa ggVG"$/;"	m
<leader>t	init.vim	/^map <leader>t :sp term:\/\/zsh<CR><c-w>J:res 10<CR>A$/;"	m
<space>a	init.vim	/^nnoremap <space>a a<space><esc>$/;"	m
<space>i	init.vim	/^nnoremap <space>i i<space><esc>$/;"	m
<space>oL	init.vim	/^nnoremap <silent><nowait> <space>oL  :<C-u>Clap lines<CR>$/;"	m
<space>ob	init.vim	/^nnoremap <silent><nowait> <space>ob  :<C-u>Clap buffers<CR>$/;"	m
<space>oc	init.vim	/^nnoremap <silent><nowait> <space>oc  :<C-u>Clap command<CR>$/;"	m
<space>of	init.vim	/^nnoremap <silent><nowait> <space>of  :<C-u>Clap files ++finder=rg --ignore --hidden --files<CR>$/;"	m
<space>og	init.vim	/^nnoremap <silent><nowait> <space>og  :<C-u>Clap grep2<CR>$/;"	m
<space>oh	init.vim	/^nnoremap <silent><nowait> <space>oh  :<C-u>Clap history<CR>$/;"	m
<space>oj	init.vim	/^nnoremap <silent><nowait> <space>oj  :<C-u>Clap jumps<CR>$/;"	m
<space>ol	init.vim	/^nnoremap <silent><nowait> <space>ol  :<C-u>Clap blines<CR>$/;"	m
<space>om	init.vim	/^nnoremap <silent><nowait> <space>om  :<C-u>Clap marks<CR>$/;"	m
<space>op	init.vim	/^nnoremap <silent><nowait> <space>op  :<C-u>Clap<CR>$/;"	m
<space>oq	init.vim	/^nnoremap <silent><nowait> <space>oq  :<C-u>Clap quickfix<CR>$/;"	m
<space>os	init.vim	/^nnoremap <silent><nowait> <space>os  :<C-u>Clap colors<CR>$/;"	m
<space>ot	init.vim	/^nnoremap <silent><nowait> <space>ot  :<C-u>Clap tags<CR>$/;"	m
<space>ow	init.vim	/^nnoremap <silent><nowait> <space>ow  :<C-u>Clap windows<CR>$/;"	m
<tab><left>	init.vim	/^noremap <silent><tab><left> :tabprevious<cr>$/;"	m
<tab><right>	init.vim	/^noremap <silent><tab><right> :tabnext<cr>$/;"	m
<tab>c	init.vim	/^noremap <silent><tab>c :tabclose<cr>$/;"	m
<tab>t	init.vim	/^noremap <silent><tab>t :tabnew<cr>$/;"	m
=	init.vim	/^nnoremap = nzz$/;"	m
>	init.vim	/^    nnoremap <silent><buffer><expr> >        defx#do_action('resize',  defx#get_context().winwid/;"	m
>	init.vim	/^nnoremap > >>$/;"	m
>	init.vim	/^xnoremap > >gv$/;"	m
AdjustFontSize	init.vim	/^function! AdjustFontSize(amount)$/;"	f
Ag	init.vim	/^command! -bang -nargs=* Ag$/;"	c
Bigger	init.vim	/^command! Bigger :let &guifont = substitude(&guifont, '\\d\\+$', '\\=submatch(0)+1',")$/;"	c
BookmarkMapKeys	init.vim	/^function! BookmarkMapKeys()$/;"	f
BookmarkUnmapKeys	init.vim	/^function! BookmarkUnmapKeys()$/;"	f
Buf_total_num	init.vim	/^function! Buf_total_num()$/;"	f
C	init.vim	/^	nnoremap <silent><buffer><expr> C   defx#do_action('toggle_columns', 'mark:indent:icon:filename/;"	m
CheckUpdate	init.vim	/^function! CheckUpdate(timer)$/;"	f
ClosePair	init.vim	/^function! ClosePair(char)$/;"	f
Colors	init.vim	/^command! -bang Colors$/;"	c
CompileRunGcc	init.vim	/^func! CompileRunGcc()$/;"	f
CompileRunGcc_girl	init.vim	/^func! CompileRunGcc_girl()$/;"	f
D	init.vim	/^nnoremap D 10j$/;"	m
DisplayFontInfo	init.vim	/^function! DisplayFontInfo()$/;"	f
DisplayFontSelector	init.vim	/^function! DisplayFontSelector()$/;"	f
E	init.vim	/^    nmap <buffer> E 5<plug>UndotreePreviousState$/;"	m
E	init.vim	/^    nnoremap <silent><buffer><expr> E        defx#do_action('open', 'vsplit')$/;"	m
F	autoload/myspacevim.vim	/^    nmap F <Plug>(coc-smartf-backward)$/;"	m
File_size	init.vim	/^function! File_size(f)$/;"	f
Files	init.vim	/^command! -bang -nargs=? -complete=dir Files$/;"	c
GGrep	init.vim	/^command! -bang -nargs=* GGrep$/;"	c
GetFontInfo	init.vim	/^function! GetFontInfo()$/;"	f
GetSystem	init.vim	/^function! GetSystem()$/;"	f
H	init.vim	/^nnoremap H 10h$/;"	m
HideNumber	init.vim	/^function! HideNumber()$/;"	f
J	autoload/myspacevim.vim	/^    vnoremap J :m '>+1<CR>gv=gv$/;"	m
K	autoload/myspacevim.vim	/^    vnoremap K :m '<-2<CR>gv=gv$/;"	m
L	init.vim	/^nnoremap L 10l$/;"	m
L	init.vim	/^nnoremap L :UndotreeToggle<CR>$/;"	m
L	init.vim	/^nnoremap L g_$/;"	m
M	init.vim	/^	nnoremap <silent><buffer><expr> M   defx#do_action('new_multiple_files')$/;"	m
MyDiff	init.vim	/^    function MyDiff()$/;"	f
MySpaceVim	autoload/myspacevim.vim	/^augroup MySpaceVim$/;"	a
MyTabLine	init.vim	/^    function! MyTabLine()$/;"	f
N	autoload/myspacevim.vim	/^    nnoremap N Nzzzv$/;"	m
N	init.vim	/^	nnoremap <silent><buffer><expr> N   defx#do_action('new_file')$/;"	m
N	init.vim	/^nnoremap <expr> N 'nN'[v:searchforward]$/;"	m
NERDTreeAutoCenter	init.vim	/^let NERDTreeAutoCenter=1$/;"	v
NERDTreeAutoDeleteBuffer	init.vim	/^let NERDTreeAutoDeleteBuffer=1$/;"	v
NERDTreeChDirMode	init.vim	/^let NERDTreeChDirMode=2    " Change current working directory based on root directory in NERDTre/;"	v
NERDTreeDirArrows	init.vim	/^let NERDTreeDirArrows=1    " Display arrows instead of ascii art in NERDTree$/;"	v
NERDTreeMinimalUI	init.vim	/^let NERDTreeMinimalUI=1    " Start NERDTree in minimal UI mode (No help lines)$/;"	v
NERDTreeQuitOnOpen	init.vim	/^let NERDTreeQuitOnOpen=1   " Close NERDtree when files was opened$/;"	v
NERDTreeShowBookmarks	init.vim	/^let NERDTreeShowBookmarks=1$/;"	v
NERDTreeShowHidden	init.vim	/^let NERDTreeShowHidden=1$/;"	v
NERDTreeShowLineNumbers	init.vim	/^let NERDTreeShowLineNumbers=1$/;"	v
NERDTreeWinPos	init.vim	/^let NERDTreeWinPos="left"$/;"	v
NERDTreeWinSize	init.vim	/^let NERDTreeWinSize=25$/;"	v
NETDTreeIgnore	init.vim	/^let NETDTreeIgnore=['\\~$','\\.pyc$','\\.swp$'] "隐藏.pyc等文件$/;"	v
NearestMethodOrFunction	init.vim	/^function! NearestMethodOrFunction() abort$/;"	f
NumberToggle	init.vim	/^function! NumberToggle()$/;"	f
P	init.vim	/^    nnoremap <silent><buffer><expr> P        defx#do_action('preview')$/;"	m
Q	init.vim	/^map Q :q<CR>$/;"	m
QuickRun	autoload/myspacevim.vim	/^    func! QuickRun()$/;"	f
R	init.vim	/^	nnoremap <silent><buffer><expr> R   defx#do_action('rename')$/;"	m
RestoreFileEncodings	init.vim	/^function! RestoreFileEncodings()$/;"	f
Rg	init.vim	/^command! -bang -nargs=* Rg$/;"	c
Rungdb	init.vim	/^func! Rungdb()$/;"	f
S	init.vim	/^	nnoremap <silent><buffer><expr> S   defx#do_action('toggle_sort', 'time')$/;"	m
S	init.vim	/^map S :w!<CR>$/;"	m
SetFileEncodings	init.vim	/^function! SetFileEncodings(encodings)$/;"	f
SetLastModifiedTime	init.vim	/^function! SetLastModifiedTime(lineno)$/;"	f
SetTitle	init.vim	/^function! SetTitle()$/;"	f
Smaller	init.vim	/^command! Smaller :let &guifont = substitude(&guifont, '\\d\\+$', '\\=submatch(0)-1',")$/;"	c
Smartf	autoload/myspacevim.vim	/^    augroup Smartf$/;"	a
SpaceVim的配置文件	README.md	/^# SpaceVim的配置文件$/;"	c
TN	init.vim	/^nnoremap  TN :call NumberToggle()<cr>$/;"	m
Tlist_Auto_Open	init.vim	/^let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	init.vim	/^let Tlist_Auto_Update = 1$/;"	v
Tlist_Ctags_Cmd	init.vim	/^let Tlist_Ctags_Cmd = '\/usr\/bin\/ctags'$/;"	v
Tlist_Exit_OnlyWindow	init.vim	/^let Tlist_Exit_OnlyWindow = 1$/;"	v
Tlist_File_Fold_Auto_Close	init.vim	/^let Tlist_File_Fold_Auto_Close=1    $/;"	v
Tlist_Show_One_File	init.vim	/^let Tlist_Show_One_File = 1$/;"	v
Tlist_Sort_Type	init.vim	/^let Tlist_Sort_Type="name"$/;"	v
Tlist_Use_Right_Window	init.vim	/^let Tlist_Use_Right_Window = 1$/;"	v
Tlist_Use_SingleClick	init.vim	/^let Tlist_Use_SingleClick=1$/;"	v
Tlist_WinWidth	init.vim	/^let Tlist_WinWidth = 30$/;"	v
ToggleCursor	init.vim	/^function ToggleCursor() abort$/;"	f
U	init.vim	/^    nmap <buffer> U 5<plug>UndotreeNextState$/;"	m
U	init.vim	/^nnoremap U 10k$/;"	m
Undotree_CustomMap	init.vim	/^function g:Undotree_CustomMap()$/;"	f
X	init.vim	/^	nnoremap <silent><buffer><expr> X   defx#do_action('remove')$/;"	m
[b	init.vim	/^nnoremap  [b :bp<CR>$/;"	m
[e	init.vim	/^nnoremap [e :<c-u>execute 'move -1-'.v:count1<cr>$/;"	m
[s	init.vim	/^nnoremap [s :<c-u>put! =repeat(nr2char(10), v:count1)<cr>'[$/;"	m
[t	init.vim	/^noremap <silent>[t :tabprevious<cr>$/;"	m
[tb	init.vim	/^nnoremap [tb <cmd>Telescope buffers<cr>$/;"	m
[tf	init.vim	/^nnoremap [tf <cmd>Telescope find_files<cr>$/;"	m
[tg	init.vim	/^nnoremap [tg <cmd>Telescope live_grep<cr>$/;"	m
[th	init.vim	/^nnoremap [th <cmd>Telescope help_tags<cr>$/;"	m
\x21	init.vim	/^	nnoremap <silent><buffer><expr> !   defx#do_action('execute_command')$/;"	m
]b	init.vim	/^nnoremap  ]b :bn<CR>$/;"	m
]e	init.vim	/^nnoremap ]e :<c-u>execute  'move +'.v:count1<cr>$/;"	m
]s	init.vim	/^nnoremap ]s :<c-u>put =repeat(nr2char(10), v:count1)<cr>$/;"	m
]t	init.vim	/^noremap <silent>]t :tabnext<cr>$/;"	m
]tb	init.vim	/^nnoremap ]tb <cmd>lua require('telescope.builtin').buffers()<cr>$/;"	m
]tf	init.vim	/^nnoremap ]tf <cmd>lua require('telescope.builtin').find_files()<cr>$/;"	m
]tg	init.vim	/^nnoremap ]tg <cmd>lua require('telescope.builtin').live_grep()<cr>$/;"	m
]th	init.vim	/^nnoremap ]th <cmd>lua require('telescope.builtin').help_tags()<cr>$/;"	m
`ll	init.vim	/^map  `ll 20zh$/;"	m
`rr	init.vim	/^map `rr 20zl$/;"	m
a	init.vim	/^	nnoremap <silent><buffer><expr> a   defx#do_action('cd', ['..'])$/;"	m
autosave	init.vim	/^let autosave=10$/;"	v
ayucolor	init.vim	/^    let ayucolor="light"  " for light version of theme$/;"	v
ayucolor	init.vim	/^    let ayucolor="mirage"  " for light version of theme$/;"	v
c	init.vim	/^	nnoremap <silent><buffer><expr> c   defx#do_action('copy')$/;"	m
c1	init.vim	/^nnoremap c1 :set background=dark<CR>:colorscheme lilydjwg_dark<CR> :AirlineTheme base16_colors<C/;"	m
c11	init.vim	/^nnoremap c11 :set background=light<CR>:colorscheme colorful<CR>:AirlineTheme base16_colors<CR>$/;"	m
c12	init.vim	/^nnoremap c12 :set background=light<CR>:colorscheme NeoSolarized<CR>:AirlineTheme base16_colors<C/;"	m
c13	init.vim	/^nnoremap c13 :set background=light<CR>:colorscheme solarized8_flat<CR>:AirlineTheme base16_color/;"	m
c14	init.vim	/^nnoremap c14 :set background=light<CR>:colorscheme flattened_light<CR>:AirlineTheme base16_color/;"	m
c15	init.vim	/^nnoremap c15 :set background=light<CR>:colorscheme seagull<CR>:AirlineTheme base16_colors<CR>$/;"	m
c16	init.vim	/^nnoremap c16 :set background=light<CR>:colorscheme PaperColor<CR>:AirlineTheme base16_colors<CR>$/;"	m
c17	init.vim	/^nnoremap c17 :set background=light<CR>:colorscheme kemonofriends<CR>:AirlineTheme base16_colors</;"	m
c18	init.vim	/^nnoremap c18 :set background=light<CR>:colorscheme donbass<CR>:AirlineTheme base16_colors<CR>$/;"	m
c19	init.vim	/^nnoremap c19 :set background=light<CR>:colorscheme greent<CR>:AirlineTheme base16_colors<CR>$/;"	m
c2	init.vim	/^nnoremap c2 :set background=dark<CR>:colorscheme lilydjwg_dark_modified<CR>:AirlineTheme base16_/;"	m
c3	init.vim	/^nnoremap c3 :set background=dark<CR>:colorscheme solarized8_flat<CR>:AirlineTheme base16_colors</;"	m
c4	init.vim	/^nnoremap c4 :set background=dark<CR>:colorscheme NeoSolarized<CR>:AirlineTheme base16_colors<CR>$/;"	m
c5	init.vim	/^nnoremap c5 :set background=dark<CR>:colorscheme flattened_dark<CR>:AirlineTheme base16_colors<C/;"	m
c6	init.vim	/^nnoremap c6 :set background=dark<CR>:colorscheme true<CR>:AirlineTheme base16_colors<CR>$/;"	m
c7	init.vim	/^nnoremap c7 :set background=dark<CR>:colorscheme purpura<CR>:AirlineTheme base16_colors<CR>$/;"	m
ccompile	init.vim	/^augroup ccompile$/;"	a
cd	init.vim	/^	nnoremap <silent><buffer><expr> cd  defx#do_action('change_vim_cwd')$/;"	m
comment	init.vim	/^augroup comment$/;"	a
crun	init.vim	/^augroup crun$/;"	a
csa	init.vim	/^    nnoremap <silent><buffer><expr> csa        defx#do_action('clear_select_all')$/;"	m
dd	init.vim	/^    nnoremap <silent><buffer><expr> dd       defx#do_action('remove_trash')$/;"	m
df	init.vim	/^nnoremap <silent> df :Defx  -search=`expand('%:p')` -toggle <cr>$/;"	m
e	init.vim	/^	nnoremap <silent><buffer><expr> e   defx#do_action('open')$/;"	m
e	init.vim	/^    nmap <buffer> e <plug>UndotreePreviousState$/;"	m
f	autoload/myspacevim.vim	/^    nmap f <Plug>(coc-smartf-forward)$/;"	m
ff	init.vim	/^nnoremap <silent>         ff :Files<CR>$/;"	m
fl	init.vim	/^nmap fl :NERDTreeToggle<CR>$/;"	m
fl	init.vim	/^nnoremap <silent>         fl :Lines<CR>$/;"	m
g:CheckUpdateStarted	init.vim	/^    let g:CheckUpdateStarted=1$/;"	v
g:EasyMotion_smartcase	init.vim	/^let g:EasyMotion_smartcase = 1$/;"	v
g:Lf_PreviewInPopup	init.vim	/^let g:Lf_PreviewInPopup = 1$/;"	v
g:Lf_RecurseSubmodules	autoload/myspacevim.vim	/^    let g:Lf_RecurseSubmodules = 1$/;"	v
g:Lf_ShortcutF	init.vim	/^let g:Lf_ShortcutF = '<C-s>'$/;"	v
g:Lf_WindowPosition	init.vim	/^let g:Lf_WindowPosition = 'popup'$/;"	v
g:NERDCustomDelimiters	init.vim	/^let g:NERDCustomDelimiters = {$/;"	v
g:NERDDefaultAlign	init.vim	/^let g:NERDDefaultAlign = 'left'$/;"	v
g:NERDSpaceDelims	init.vim	/^let g:NERDSpaceDelims =1$/;"	v
g:NERDTreeChDirMode	init.vim	/^let g:NERDTreeChDirMode = 2  "Change current folder as root$/;"	v
g:NERDTreeDirArrowCollapsible	init.vim	/^let g:NERDTreeDirArrowCollapsible = '-'$/;"	v
g:NERDTreeDirArrowCollapsible	init.vim	/^let g:NERDTreeDirArrowCollapsible = '▾'$/;"	v
g:NERDTreeDirArrowExpandable	init.vim	/^let g:NERDTreeDirArrowExpandable = '+'$/;"	v
g:NERDTreeDirArrowExpandable	init.vim	/^let g:NERDTreeDirArrowExpandable = '▸'$/;"	v
g:NERDTreeGitStatusIndicatorMapCustom	init.vim	/^let g:NERDTreeGitStatusIndicatorMapCustom = {$/;"	v
g:NERDTreeGitStatusShowIgnored	init.vim	/^let g:NERDTreeGitStatusShowIgnored =1$/;"	v
g:NERDTreeHidden	init.vim	/^let g:NERDTreeHidden=1     " Don't show hidden files$/;"	v
g:bookmark_auto_close	autoload/myspacevim.vim	/^    let g:bookmark_auto_close = 1$/;"	v
g:bookmark_auto_close	init.vim	/^let g:bookmark_auto_close = 1                  " 默认值为0(否)，在 quickfix 窗口选中书/;"	v
g:bookmark_auto_save	init.vim	/^let g:bookmark_auto_save = 0                   " 默认值为1(是)，是否自动保存书签$/;"	v
g:bookmark_center	init.vim	/^let g:bookmark_center = 1                      " 默认值为0(否)，是否跳转后的书签行/;"	v
g:bookmark_highlight_lines	init.vim	/^let g:bookmark_highlight_lines = 1             " 默认值为0(否)，是否高亮书签行$/;"	v
g:bookmark_no_default_key_mappings	init.vim	/^let g:bookmark_no_default_key_mappings = 1$/;"	v
g:bookmark_save_per_working_dir	init.vim	/^let g:bookmark_save_per_working_dir = 1        " 默认值为0(否)，是否针对工作目录保/;"	v
g:bookmark_show_warning	init.vim	/^let g:bookmark_show_warning = 0                " 默认值为1(是)，删除所有书签时，是/;"	v
g:bookmark_sign	init.vim	/^let g:bookmark_sign = '♥'                     " 书签符号设置（默认⚑）$/;"	v
g:clap_layout	init.vim	/^let g:clap_layout = { 'relative': 'editor' }$/;"	v
g:clap_provider_quick_open	init.vim	/^let g:clap_provider_quick_open = {$/;"	v
g:clap_theme	init.vim	/^let g:clap_theme = 'material_design_dark'$/;"	v
g:clap_theme	init.vim	/^let g:clap_theme = { 'search_text': {'guifg': 'red', 'ctermfg': 'red'} }$/;"	v
g:defx_icons_column_length	init.vim	/^let g:defx_icons_column_length = 2$/;"	v
g:defx_icons_mark_icon	init.vim	/^let g:defx_icons_mark_icon = ''$/;"	v
g:defx_icons_parent_icon	init.vim	/^let g:defx_icons_parent_icon = ""$/;"	v
g:disable_rainbow_csv_autodetect	init.vim	/^let g:disable_rainbow_csv_autodetect = 1$/;"	v
g:fzf_action	init.vim	/^let g:fzf_action = { 'ctrl-e': 'edit' }$/;"	v
g:fzf_action	init.vim	/^let g:fzf_action = {$/;"	v
g:fzf_buffers_jump	init.vim	/^let g:fzf_buffers_jump = 1$/;"	v
g:fzf_colors	init.vim	/^let g:fzf_colors =$/;"	v
g:fzf_commands_expect	init.vim	/^let g:fzf_commands_expect = 'alt-enter,ctrl-x'$/;"	v
g:fzf_commits_log_options	init.vim	/^let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bo/;"	v
g:fzf_history_dir	init.vim	/^let g:fzf_history_dir = '~\/.local\/share\/fzf-history'$/;"	v
g:fzf_layout	init.vim	/^let g:fzf_layout = { 'down': '~40%' }$/;"	v
g:fzf_layout	init.vim	/^let g:fzf_layout = { 'window': '-tabnew' }$/;"	v
g:fzf_layout	init.vim	/^let g:fzf_layout = { 'window': '10split enew' }$/;"	v
g:fzf_layout	init.vim	/^let g:fzf_layout = { 'window': 'enew' }$/;"	v
g:fzf_tags_command	init.vim	/^let g:fzf_tags_command = 'ctags -R'$/;"	v
g:git_messenger_always_into_popup	autoload/myspacevim.vim	/^    let g:git_messenger_always_into_popup = v:true$/;"	v
g:isGUI	init.vim	/^    let g:isGUI = 0$/;"	v
g:isGUI	init.vim	/^    let g:isGUI = 1$/;"	v
g:islinux	init.vim	/^    let g:islinux = 1$/;"	v
g:islinux	init.vim	/^let g:islinux = 0$/;"	v
g:iswindows	init.vim	/^    let g:iswindows = 1$/;"	v
g:iswindows	init.vim	/^let g:iswindows = 0$/;"	v
g:lightline	init.vim	/^let g:lightline = {$/;"	v
g:mkdp_auto_close	autoload/myspacevim.vim	/^    let g:mkdp_auto_close = 0$/;"	v
g:neomake_enabled_c_makers	autoload/myspacevim.vim	/^    let g:neomake_enabled_c_makers = ['clang']$/;"	v
g:neoterm_autoscroll	init.vim	/^let g:neoterm_autoscroll = 1$/;"	v
g:nerdtree_tabs_open_on_console_startup	init.vim	/^let g:nerdtree_tabs_open_on_console_startup=0$/;"	v
g:quickmenu_options	autoload/myspacevim.vim	/^    let g:quickmenu_options = "LH"$/;"	v
g:rainbow_active	init.vim	/^let g:rainbow_active = 1$/;"	v
g:rainbow_conf	init.vim	/^let g:rainbow_conf = {$/;"	v
g:rainbow_operators	init.vim	/^let g:rainbow_operators=2$/;"	v
g:rbpt_colorpairs	init.vim	/^let g:rbpt_colorpairs = [$/;"	v
g:rbpt_loadcmd_toggle	init.vim	/^let g:rbpt_loadcmd_toggle = 0$/;"	v
g:rbpt_max	init.vim	/^let g:rbpt_max = 16$/;"	v
g:rcsv_colorpairs	init.vim	/^let g:rcsv_colorpairs = [['red', 'red'], ['blue', 'blue'], ['green', 'green'], ['magenta', 'mage/;"	v
g:rcsv_delimiters	init.vim	/^let g:rcsv_delimiters = ["\\t", ",", "^", "~#~"]$/;"	v
g:space_vim_transp_bg	init.vim	/^let g:space_vim_transp_bg = 1$/;"	v
g:spacevim_colorscheme	init.vim	/^let g:spacevim_colorscheme = 'onedark'$/;"	v
g:spacevim_enable_vimfiler_filetypeicon	autoload/myspacevim.vim	/^    let g:spacevim_enable_vimfiler_filetypeicon = 1$/;"	v
g:spacevim_guifont	init.vim	/^let g:spacevim_guifont='CascadiaCove\\ Nerd\\ Font:h12'$/;"	v
g:startify_bookmarks	init.vim	/^let g:startify_bookmarks            = [$/;"	v
g:startify_custom_footer	init.vim	/^let g:startify_custom_footer = [$/;"	v
g:startify_custom_header	init.vim	/^let g:startify_custom_header = [$/;"	v
g:startify_files_number	init.vim	/^let g:startify_files_number = 20$/;"	v
g:startify_session_autoload	init.vim	/^let g:startify_session_autoload = 1$/;"	v
g:startify_skiplist	init.vim	/^let g:startify_skiplist = [$/;"	v
g:table_mode_corner	autoload/myspacevim.vim	/^    let g:table_mode_corner='|'$/;"	v
g:tablineclosebutton	init.vim	/^let g:tablineclosebutton=1$/;"	v
g:tagbar_autopreview	init.vim	/^let g:tagbar_autopreview = 0$/;"	v
g:tagbar_ctags_bin	init.vim	/^let g:tagbar_ctags_bin='\/usr\/bin\/ctags'$/;"	v
g:tagbar_left	init.vim	/^let g:tagbar_left = 1$/;"	v
g:tagbar_sort	init.vim	/^let g:tagbar_sort = 0$/;"	v
g:tagbar_width	init.vim	/^let g:tagbar_width=20$/;"	v
g:terminal_color_0	init.vim	/^let g:terminal_color_0  = '#000000'$/;"	v
g:terminal_color_1	init.vim	/^let g:terminal_color_1  = '#FF5555'$/;"	v
g:terminal_color_10	init.vim	/^let g:terminal_color_10 = '#5AF78E'$/;"	v
g:terminal_color_11	init.vim	/^let g:terminal_color_11 = '#F4F99D'$/;"	v
g:terminal_color_12	init.vim	/^let g:terminal_color_12 = '#CAA9FA'$/;"	v
g:terminal_color_13	init.vim	/^let g:terminal_color_13 = '#FF92D0'$/;"	v
g:terminal_color_14	init.vim	/^let g:terminal_color_14 = '#9AEDFE'$/;"	v
g:terminal_color_2	init.vim	/^let g:terminal_color_2  = '#50FA7B'$/;"	v
g:terminal_color_3	init.vim	/^let g:terminal_color_3  = '#F1FA8C'$/;"	v
g:terminal_color_4	init.vim	/^let g:terminal_color_4  = '#BD93F9'$/;"	v
g:terminal_color_5	init.vim	/^let g:terminal_color_5  = '#FF79C6'$/;"	v
g:terminal_color_6	init.vim	/^let g:terminal_color_6  = '#8BE9FD'$/;"	v
g:terminal_color_7	init.vim	/^let g:terminal_color_7  = '#BFBFBF'$/;"	v
g:terminal_color_8	init.vim	/^let g:terminal_color_8  = '#4D4D4D'$/;"	v
g:terminal_color_9	init.vim	/^let g:terminal_color_9  = '#FF6E67'$/;"	v
g:tex_conceal	autoload/myspacevim.vim	/^        let g:tex_conceal = ""$/;"	v
g:undotree_DiffAutoOpen	init.vim	/^let g:undotree_DiffAutoOpen = 0$/;"	v
g:undotree_DiffAutoOpen	init.vim	/^let g:undotree_DiffAutoOpen = 1$/;"	v
g:undotree_DiffpanelHeight	init.vim	/^let g:undotree_DiffpanelHeight = 8$/;"	v
g:undotree_SetFocusWhenToggle	init.vim	/^let g:undotree_SetFocusWhenToggle = 1$/;"	v
g:undotree_ShortIndicators	init.vim	/^let g:undotree_ShortIndicators = 1$/;"	v
g:undotree_SplitWidth	init.vim	/^let g:undotree_SplitWidth = 24$/;"	v
g:undotree_WindowLayout	init.vim	/^let g:undotree_WindowLayout = 2$/;"	v
g:vimtex_syntax_conceal_default	autoload/myspacevim.vim	/^    let g:vimtex_syntax_conceal_default = 0$/;"	v
g:vimtex_view_method	autoload/myspacevim.vim	/^    let g:vimtex_view_method = 'zathura'$/;"	v
g:vista#renderer#enable_icon	init.vim	/^let g:vista#renderer#enable_icon = 1$/;"	v
g:vista#renderer#icons	init.vim	/^let g:vista#renderer#icons = {$/;"	v
g:vista_blink	init.vim	/^let g:vista_blink = [2, 100]$/;"	v
g:vista_close_on_jump	init.vim	/^let g:vista_close_on_jump = 0$/;"	v
g:vista_cpp_executive	init.vim	/^let g:vista_cpp_executive = 'vim_lsp'$/;"	v
g:vista_ctags_cmd	init.vim	/^let g:vista_ctags_cmd = {$/;"	v
g:vista_cursor_delay	init.vim	/^let g:vista_cursor_delay = 400$/;"	v
g:vista_default_executive	init.vim	/^let g:vista_default_executive = 'ctags'$/;"	v
g:vista_disable_statusline	init.vim	/^let g:vista_disable_statusline = 1$/;"	v
g:vista_echo_cursor	init.vim	/^let g:vista_echo_cursor = 1$/;"	v
g:vista_echo_cursor_strategy	init.vim	/^let g:vista_echo_cursor_strategy ='floating_win'$/;"	v
g:vista_executive_for	init.vim	/^let g:vista_executive_for = {$/;"	v
g:vista_finder_alternative_executives	init.vim	/^let g:vista_finder_alternative_executives = ['coc']$/;"	v
g:vista_fzf_preview	init.vim	/^let g:vista_fzf_preview = ['right:50%']$/;"	v
g:vista_icon_indent	init.vim	/^let g:vista_icon_indent = ["╰─▸ ", "├─▸ "]$/;"	v
g:vista_sidebar_width	init.vim	/^let g:vista_sidebar_width = 30$/;"	v
g:vista_stay_on_open	init.vim	/^let g:vista_stay_on_open = 1$/;"	v
g:vista_vimwiki_executive	init.vim	/^let g:vista_vimwiki_executive = 'markdown'$/;"	v
g:which_key_map	init.vim	/^let g:which_key_map = {$/;"	v
g:winresizer_keycode_cancel	autoload/myspacevim.vim	/^    let g:winresizer_keycode_cancel = 113$/;"	v
g:winresizer_start_key	autoload/myspacevim.vim	/^    let g:winresizer_start_key = '<space>wa'$/;"	v
g:wintabs_autoclose_vim	init.vim	/^let g:wintabs_autoclose_vim = 1$/;"	v
h	init.vim	/^    nnoremap <silent><buffer><expr> h$/;"	m
h	init.vim	/^nnoremap h 5h$/;"	m
hl	autoload/myspacevim.vim	/^    cnoremap hl  nohlsearch<CR>$/;"	m
html	init.vim	/^nnoremap html :%TOhtml<cr>$/;"	m
j	init.vim	/^	nnoremap <silent><buffer><expr> j   line('.') == line('$') ? 'gg' : 'j'$/;"	m
j	init.vim	/^    nnoremap <silent><buffer><expr> j        line('.') == line('$') ? 'gg' : 'j'$/;"	m
j	init.vim	/^nnoremap j 5j$/;"	m
jk	autoload/myspacevim.vim	/^    nnoremap jk <esc>$/;"	m
k	init.vim	/^	nnoremap <silent><buffer><expr> k   line('.') == 1 ? 'G' : 'k'$/;"	m
k	init.vim	/^    nnoremap <silent><buffer><expr> k        line('.') == 1 ? 'G' : 'k'$/;"	m
k	init.vim	/^nnoremap k 5k$/;"	m
l	init.vim	/^    nnoremap <silent><buffer><expr> l        defx#do_action('open_tree')$/;"	m
l	init.vim	/^nnoremap l 5l$/;"	m
lf	init.vim	/^nnoremap <silent> lf :Leaderf function<CR>$/;"	m
lf	init.vim	/^nnoremap <silent> lf :LeaderfFunction<CR>$/;"	m
lf	init.vim	/^noremap lf :LeaderfFunction<cr>$/;"	m
m	init.vim	/^	nnoremap <silent><buffer><expr> m   defx#do_action('move')$/;"	m
ma	init.vim	/^    nmap ma :BookmarkShowAll<CR>$/;"	m
mapleader	init.vim	/^let mapleader = '\\'$/;"	v
mc	init.vim	/^    nmap mc :BookmarkClear<CR>$/;"	m
mi	init.vim	/^    nmap mi :BookmarkAnnotate<CR>$/;"	m
mjj	init.vim	/^    nmap mjj :BookmarkMoveDown$/;"	m
mkk	init.vim	/^    nmap mkk :BookmarkMoveUp$/;"	m
mm	init.vim	/^    nmap mm :BookmarkToggle<CR>$/;"	m
mn	init.vim	/^    nmap mn :BookmarkNext<CR>$/;"	m
mp	init.vim	/^    nmap mp :BookmarkPrev<CR>$/;"	m
mx	init.vim	/^    nmap mx :BookmarkClearAll<CR>$/;"	m
myspacevim#after	autoload/myspacevim.vim	/^func! myspacevim#after() abort$/;"	f
myspacevim#before	autoload/myspacevim.vim	/^function! myspacevim#before() abort$/;"	f
n	autoload/myspacevim.vim	/^    nnoremap n nzzzv$/;"	m
n	init.vim	/^nnoremap <expr> n 'Nn'[v:searchforward]$/;"	m
nc	init.vim	/^map nc :NextColorScheme<CR>$/;"	m
nd	init.vim	/^	nnoremap <silent><buffer><expr> nd   defx#do_action('new_directory')$/;"	m
nocomment	init.vim	/^augroup nocomment$/;"	a
nt	init.vim	/^nmap nt :NERDTreeToggle<CR>$/;"	m
o	init.vim	/^    nnoremap <silent><buffer><expr> o        defx#do_action('open_directory')$/;"	m
p	init.vim	/^	nnoremap <silent><buffer><expr> p   defx#do_action('paste')$/;"	m
pU	init.vim	/^    nnoremap pU  :PlugUpgrade<CR>$/;"	m
pc	init.vim	/^map pc :PreviousColorScheme<CR>$/;"	m
pcl	init.vim	/^    nnoremap pcl  :PlugClean<CR>$/;"	m
pi	init.vim	/^    nnoremap pi  :PlugInstall<CR>$/;"	m
pi	init.vim	/^    nnoremap pi  :PluginInstall<CR>$/;"	m
ps	init.vim	/^    nnoremap ps  :PlugStatus<CR>$/;"	m
pu	init.vim	/^    nnoremap pu  :PlugUpdate<CR>$/;"	m
python_highlight_all	init.vim	/^let python_highlight_all=1$/;"	v
q	init.vim	/^	nnoremap <silent><buffer><expr> q   defx#do_action('quit')$/;"	m
qq	autoload/myspacevim.vim	/^    nnoremap  qq    :q!<CR>$/;"	m
qw	autoload/myspacevim.vim	/^    nnoremap  qw    :wq<CR>$/;"	m
r	init.vim	/^    nnoremap <silent><buffer><expr> r        defx#do_action('redraw')$/;"	m
r	init.vim	/^map r :call CompileRunGcc()<CR>$/;"	m
relative_numbser	autoload/myspacevim.vim	/^    augroup relative_numbser$/;"	a
s	init.vim	/^noremap s <nop>$/;"	m
s:VsetSearch	autoload/myspacevim.vim	/^    function! s:VsetSearch()$/;"	f
s:defx_mappings	init.vim	/^function! s:defx_mappings() abort$/;"	f
s:defx_toggle_tree	init.vim	/^function! s:defx_toggle_tree() abort$/;"	f
s:fontsize	init.vim	/^let s:fontsize = 12$/;"	v
s:jump_dirty	init.vim	/^function! s:jump_dirty(dir) abort$/;"	f
s:maxfontsize	init.vim	/^let s:maxfontsize = 16$/;"	v
s:minfontsize	init.vim	/^let s:minfontsize = 6$/;"	v
s:pattern	init.vim	/^let s:pattern = '^\\(.* \\)\\([1-9][0-9]*\\)$'$/;"	v
sh	init.vim	/^map sh :set nosplitright<CR>:vsplit<CR>:set splitright<CR>$/;"	m
sh	init.vim	/^nnoremap sh <C-w>t<C-w>K$/;"	m
sj	init.vim	/^map sj :set splitbelow<CR>:split<CR>$/;"	m
sk	init.vim	/^map sk :set nosplitbelow<CR>:split<CR>:set splitbelow<CR>$/;"	m
sl	init.vim	/^map sl :set splitright<CR>:vsplit<CR>$/;"	m
srh	init.vim	/^nnoremap srh <C-w>b<C-w>K$/;"	m
srv	init.vim	/^nnoremap srv <C-w>b<C-w>H$/;"	m
ss	init.vim	/^nmap ss <Plug>(easymotion-s2)$/;"	m
sv	init.vim	/^nnoremap sv <C-w>t<C-w>H$/;"	m
sw	autoload/myspacevim.vim	/^    cnoremap sw w !sudo tee >\/dev\/null %$/;"	m
tU	init.vim	/^nnoremap tU :tab split<CR>$/;"	m
tb	init.vim	/^map! tb <Esc> :TagbarToggle<CR>$/;"	m
tb	init.vim	/^nnoremap  tb :TagbarToggle<CR>$/;"	m
tee	init.vim	/^nnoremap tee :w !sudo tee %<cr>$/;"	m
themes	init.vim	/^    let themes = [$/;"	v
tl	init.vim	/^nnoremap  tl <Esc>:TlistToggle<Cr>$/;"	m
tmn	init.vim	/^nnoremap tmn :-tabmove<CR>$/;"	m
tmp	init.vim	/^nnoremap tmp :+tabmove<CR>$/;"	m
tu	init.vim	/^nnoremap tu :tabe<CR>$/;"	m
u	init.vim	/^	nnoremap <silent><buffer><expr> u   defx#do_action('cd', ['..'])$/;"	m
u	init.vim	/^    nmap <buffer> u <plug>UndotreeNextState$/;"	m
user_plugin_defx	init.vim	/^augroup user_plugin_defx$/;"	a
wb	init.vim	/^nmap wb :%s\/\\s\\+$\/\/ge<CR>$/;"	m
x	init.vim	/^	nnoremap <silent><buffer><expr> x   defx#do_action('execute_system')$/;"	m
yy	init.vim	/^	nnoremap <silent><buffer><expr> yy  defx#do_action('yank_path')$/;"	m
z	init.vim	/^  nnoremap <silent><buffer><expr> z     <SID>defx_toggle_tree()                    " 打开或者/;"	m
~	init.vim	/^	nnoremap <silent><buffer><expr> ~   defx#do_action('cd')$/;"	m
